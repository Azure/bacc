name: az-deploy
on:
  workflow_call:
    inputs:
      location:
        type: string
        description: 'Deployment location'
        required: true
      prefix:
        type: string
        description: 'Deployment prefix'
        required: true
      suffix_salt:
        type: string
        description: 'Randomizer string for suffix'
        required: false
        default: ''
      use_single_resource_group:
        type: boolean
        description: 'Use single resource group for all resources'
        required: false
        default: false
      enable_application_containers:
        type: boolean
        description: 'Enable application containers'
        required: false
        default: false
      cleanup:
        type: boolean
        description: 'Cleanup resources'
        required: false
        default: true
  workflow_dispatch:
    # ensure inputs are same as workflow_call.inputs
    inputs:
      location:
        type: string
        description: 'Deployment location'
        required: true
      prefix:
        type: string
        description: 'Deployment prefix'
        required: true
      suffix_salt:
        type: string
        description: 'Randomizer string for suffix'
        required: false
        default: ''
      use_single_resource_group:
        type: boolean
        description: 'Use single resource group for all resources'
        required: false
        default: false
      enable_application_containers:
        type: boolean
        description: 'Enable application containers'
        required: false
        default: false
      cleanup:
        type: boolean
        description: 'Cleanup resources'
        required: false
        default: true
permissions:
  # these are needed for azure login with OIDC
  contents: read
  id-token: write
jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: azure
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v1
        id: az_login
        with:
          client-id: ${{ secrets.AZ_CLIENT_ID }}
          tenant-id: ${{ secrets.AZ_TENANT_ID }}
          subscription-id: ${{ secrets.AZ_SUBSCRIPTION_ID }}
      - uses: azure/arm-deploy@v1
        with:
          scope: subscription
          subscriptionId: ${{ secrets.AZ_SUBSCRIPTION_ID }}
          region: ${{ inputs.location }}
          template: ./infrastructure.bicep
          deploymentName: dpl-${{ inputs.prefix }}-${{ github.run_id }}
          parameters: batchServiceObjectId=${{ secrets.AZ_BATCH_SERVICE_OBJECT_ID }} prefix=${{ inputs.prefix }} suffixSalt="${{ inputs.suffix_salt }}" useSingleResourceGroup=${{ inputs.use_single_resource_group }} tags="{'github-action':'1', 'github-run-id':'${{ github.run_id }}'}" enableApplicationContainers=${{ inputs.enable_application_containers }}
      - name: cleanup
        if: always() && inputs.cleanup && steps.az_login.conclusion == 'success'
        run: |
          az deployment sub show -n dpl-${{ inputs.prefix }}-${{ github.run_id }} --query properties.outputs
          az group list --tag "github-run-id=${{ github.run_id }}" --query "[].name" -o tsv
          az group list --tag "github-run-id=${{ github.run_id }}" --query "[].name" -o tsv | xargs -l az group delete --yes --no-wait --name
